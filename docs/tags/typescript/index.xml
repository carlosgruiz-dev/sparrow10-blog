<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>typescript on Sparrow10</title>
    <link>https://www.sparrow10.com/tags/typescript/</link>
    <description>Recent content in typescript on Sparrow10</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Â© &lt;a href=&#39;https://carlosgustavoruiz.me&#39;&gt;Carlos Gustavo Ruiz&lt;/a&gt;</copyright>
    <lastBuildDate>Thu, 28 Jul 2022 15:02:37 +0000</lastBuildDate><atom:link href="https://www.sparrow10.com/tags/typescript/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>The &#34;M&#34; word (Monads)</title>
      <link>https://www.sparrow10.com/posts/2022-07-28_the_m_word_monads/</link>
      <pubDate>Thu, 28 Jul 2022 15:02:37 +0000</pubDate>
      
      <guid>https://www.sparrow10.com/posts/2022-07-28_the_m_word_monads/</guid>
      <description>When you start with functional programming, saying the M word is like swearing. This esoteric, strange, and uncommon word points to a general pattern that takes some time to grasp. Despite saying that a monad is a monoid in the category of endofunctors is accurate, for a newbie is as unhelpful as comparing monads with burritos. It just misses the point.
Here are some videos I found valuable for understanding this concept with a practical approach.</description>
    </item>
    
  </channel>
</rss>
